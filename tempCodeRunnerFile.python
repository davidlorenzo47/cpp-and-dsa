def numWays(words, target):
    pass
        # n = len(words[0])
        # m = len(target)
        # mod = 10**9 + 7
        # dp = [0] * (m+1)
        # dp[0] = 1
        
        # count = [[0] * 26 for _ in range(n)]
        # for i in range(n):
        #     for word in words:
        #         count[i][ord(word[i]) - ord('a')] += 1
        
        # for i in range(n):
        #     for j in range(m-1, -1, -1):
        #         dp[j+1] += dp[j] * count[i][ord(target[j]) - ord('a')]
        #         dp[j+1] %= mod
        # return dp[m]
        

def numWays(words, target):
    word_len = len(words[0])
    target_len = len(target)
    word_count = len(words)
    MOD = 10**9 + 7
    
    dp = [[0] * (target_len + 1) for _ in range(word_len + 1)]
    dp[0][0] = 1
    
    for i in range(1, word_len + 1):
        freq = {}
        for word in words:
            freq[word[i - 1]] = freq.get(word[i - 1], 0) + 1
            
        for j in range(target_len + 1):
            dp[i][j] = (dp[i - 1][j] + (dp[i - 1][j - 1] * freq.get(target[j - 1], 0)) % MOD) % MOD

    return dp[word_len][target_len]

# Sample Test 0
# words_0 = ['valya', 'lyglb', 'vldoh']
# target_0 = 'cal'
# print(numWays(words_0, target_0))

# # Sample Test 1
# words_1 = ['xzu', 'dfw', 'eor', 'mat', 'jyc']
# target_1 = 'cf'
# print(numWays(words_1, target_1))


    # mod = 10**9 + 7
    # word_len, target_len = len(words[0]), len(target)

    # # Create a 2D array to store the number of ways to form the target
    # dp = [[0] * (target_len + 1) for _ in range(word_len + 1)]
    # dp[0][0] = 1

    # for i in range(1, word_len + 1):
    #     count = [0] * 26  # count[i] stores the count of character 'a' + i in the current column

    #     for j in range(target_len + 1):
    #         count[ord(target[j - 1]) - ord('a')] += dp[i - 1][j]

    #         dp[i][j] = count[ord(target[j - 1]) - ord('a')] % mod

    # # Sum up the values in the last column for the final result
    # result = sum(dp[word_len]) % mod
    # return result

    # mod = 10**9 + 7
    # word_len, target_len = len(words[0]), len(target)

    # # Create a 2D array to store the number of ways to form the target
    # dp = [[0] * (target_len + 1) for _ in range(word_len + 1)]
    # dp[0][0] = 1

    # for i in range(1, word_len + 1):
    #     count = [0] * 26  # count[i] stores the count of character 'a' + i in the current column

    #     for j in range(target_len + 1):
    #         count[ord(target[j - 1]) - ord('a')] += dp[i - 1][j]

    #         dp[i][j] = count[ord(target[j - 1]) - ord('a')] % mod

    # # Sum up the values in the last column for the final result
    # result = sum(dp[word_len]) % mod
    # return result

# words = ["acca","bbbb","caca"]
words = ["valya", "lyglb", "vldoh"]
# words = ["xzu", "dfw", "eor", "mat", "jyc"]
# target = 'aba'
target = 'val'
# target = "cf"
result = numWays(words, target)
print(result)